version: '3.4'

services:
  
       
  fly.flight.sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Flyflight!1"
      ACCEPT_EULA: "Y"
    ports:
      - "1434:1433"
    depends_on:
      fly.flight.elasticsearch:
        condition: service_healthy
    volumes:
      - ../../sql/init:/docker-entrypoint-initdb.d
    networks:
      - fly-network
  
  fly.flight.elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - fly-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  fly.flight.redis:
    image: redis:7
    ports:
       - "6379:6379"
    restart: always
    networks:
      - fly-network

  fly.flight.keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_REALM_NAME=FlyTicket
      - KC_HOSTNAME=fly.flight.keycloak
      - KC_HTTP_ENABLED=true
      - KEYCLOAK_FRONTEND_URL=http://fly.flight.keycloak:8080
      - KC_DB= dev-file
      - KC_IMPORT= /opt/keycloak/data/import/FlyTicket-realm.json
       
    volumes:
      - ../../Configuration/keycloak-import:/opt/keycloak/data/import
    command: start-dev --import-realm
    ports:
      - 8080:8080
    networks:
      - fly-network

  fly.flight.api:
    image: ${DOCKER_REGISTRY-}flyflightapi
    build:
      context: .
      dockerfile: Fly.Flight.API/Dockerfile
    depends_on: 
        - fly.flight.sqlserver
        - fly.flight.keycloak
    environment:
       - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5001:443"
      - "5000:80"
    networks:
      - fly-network

volumes:
  sql_data:

networks:
  fly-network:
    driver: bridge
